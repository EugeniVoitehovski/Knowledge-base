scp_program -> proc_of_checking_node_with_start_and_end_time_in_time (*
    -> rrel_params: ... (*
        -> rrel_1: rrel_in: _situation;;
        -> rrel_2: rrel_in: _time_point;;
        -> rrel_3: rrel_out: _status;;
    *);;
    -> rrel_operators: ... (*
        ->rrel_init: ..operator0 (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _situation;;
            -> rrel_2: rrel_scp_var: rrel_assign: _arc1;;
            -> rrel_3: rrel_scp_var: rrel_assign: _start_time;;
            -> rrel_4: rrel_scp_var: rrel_assign: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_start_time;;
            => nrel_goto: ..operator1;;
        *);;
        ->..operator1 (*
            <- searchElStr5;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _situation;;
            -> rrel_2: rrel_scp_var: rrel_assign: _arc1;;
            -> rrel_3: rrel_scp_var: rrel_assign: _finish_time;;
            -> rrel_4: rrel_scp_var: rrel_assign: _arc2;;
            -> rrel_5: rrel_fixed: rrel_scp_const: nrel_finish_time;;
            => nrel_goto: ..operator2;;
        *);;
        ->..operator2 (*
            <- ifVarAssign;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _start_time;;
            => nrel_then: ..operator3;;
            => nrel_else: ..operator5;;
        *);;
        ->..operator3 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_of_compare_time_points;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _time_point;;
                -> rrel_2: rrel_fixed: rrel_scp_var: _start_time;;
                -> rrel_3: rrel_scp_var: rrel_assign: _time1;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument0;;
            => nrel_goto: ..operator4;;
        *);;
        ->..operator4 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument0;;
            => nrel_goto: ..operator6;;
        *);;
        ->..operator5 (*
            <- varAssign;;
            -> rrel_1: rrel_scp_var: rrel_assign: _time1;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _time_point;;
            => nrel_goto: ..operator6;;
        *);;
        ->..operator6 (*
            <- ifVarAssign;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _finish_time;;
            => nrel_then: ..operator7;;
            => nrel_else: ..operator9;;
        *);;
        ->..operator7 (*
            <- call;;
            -> rrel_1: rrel_fixed: rrel_scp_const: proc_of_compare_time_points;;
            -> rrel_2: ... (*
                -> rrel_1: rrel_fixed: rrel_scp_var: _time_point;;
                -> rrel_2: rrel_fixed: rrel_scp_var: _finish_time;;
                -> rrel_3: rrel_scp_var: rrel_assign: _time2;;
            *);;
            -> rrel_3: rrel_assign: rrel_scp_var: _argument1;;
            => nrel_goto: ..operator8;;
        *);;
        ->..operator8 (*
            <- waitReturn;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _argument1;;
            => nrel_goto: ..operator10;;
        *);;
        ->..operator9 (*
            <- varAssign;;
            -> rrel_1: rrel_scp_var: rrel_assign: _time2;;
            -> rrel_2: rrel_fixed: rrel_scp_const: empty;;
            => nrel_goto: ..operator10;;
        *);;
        ->..operator10 (*
            <- ifCoin;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _time_point;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _time1;;
            => nrel_then: ..operator11;;
            => nrel_else: ..operator13;;
        *);;
        ->..operator11 (*
            <- ifCoin;;
            -> rrel_1: rrel_fixed: rrel_scp_var: _time_point;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _time2;;
            => nrel_else: ..operator12;;
            => nrel_then: ..operator13;;
        *);;
        ->..operator12 (*
            <- varAssign;;
            -> rrel_1: rrel_scp_var: rrel_assign: _status;;
            -> rrel_2: rrel_fixed: rrel_scp_var: _time_point;;
            => nrel_goto: ..operator13;;
        *);;
        ->..operator13 (*
            <- return;;
        *);;
    *);;
*);;